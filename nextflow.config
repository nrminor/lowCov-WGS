params {
	
	// WORKFLOW PARAMETERS TO REVIEW AT EACH RUN
	// ----------------------------------------

    // samplesheet with input file metadata and file paths
    samplesheet = "resources/samplesheet.csv"
	
	// Where to place results
	results = "$launchDir/results"

	// Reference genome assembly, preferably from NCBI RefSeq, to be used for read mapping
	reference = "$launchDir/ref.fasta"

	// Whether to run in "low disk mode". If this is set to true, large or intermediate files will be
	// symlinked into the results directory rather than being copied. If this workflow is being run on
	// an HPC cluster or other well-resourced compute infrastructure, we recommend leaving this as false.
	low_disk_mode = false
	
	// SNP CALLING SETTINGS	
	minor_allele_frequency = 0.05 // The default of 0.05 states that a SNP must be present in %5 of your samples.
	minor_allele_count = 2 // An alternative to MAF. Specified as 1, it says a SNP has to occur in at least 1 sample
	max_snp_missingness = 9 // The maximum number of samples that are allowed to have no coverage on a SNP. 0 ensures that only SNPs that have coverage in *ALL* samples will be retained. 
	min_quality = 10 // minimum variant quality score
	min_depth = 2 // For the default of 2, a SNP must be present in at least two reads to be retained
	max_depth = 50 // For the default of 50, sites with more than 50 reads are excluded

	// WHICH ANALYSES TO RUN
	// Settings to control which steps the workflow runs. All of these parameters are boolean (true/false)
	variant_call_only = false // When true, the workflow will only run standard bioinformatics steps that culminate in a VCF, and not do any population genetics analyses. This is equivalent to setting all the parameters below to false.
	estimate_structure = false // When true, the workflow will run STRUCTURE on the multisample VCFs
	estimate_admixture = false // When true, the workflow will estimate admixture between populations
	principal_component_analyses = false // When true, the workflow will use two methods to analyze population structure each per-species VCF
	selection_scan = false // When true, the workflow will use the program Ohana to scan for signatures of selection
	genome_wide_association = false // When true, the workflow will run a GWAS on all the samples for each species or library prep
	linkage_disequilibrium = false // When true, the workflow will infer linkage disequilibrium from in a single-sample VCF
	esimate_roh = false // when true, the workflow will use `samtools roh` to estimate runs of homozygosity
	pedigree_estimation = false // When true, the workflow will estimate a pedigree structure for the samples in a merged, per-species VCF files. This step was inspired by Petty et al. 2019 in Molecular Ecology Resources
	site_frequency_spectra = false // Infer folded site frequency spectra for each species.
	stairwayplot = false // When true, the workflow will reconstruct the demographic history for each species
	
	
	// WORKFLOW PARAMETERS THAT SHOULD NOT BE CHANGED
	// ----------------------------------------
	
	
}


// WHETHER TO GENERATE A REPORT OF RUN STATISTICS
report {
  enabled = true
  file    = "${params.results}/report.html"
}


// WHETHER TO GENERATE A VISUALIZATION OF THE WORKFLOW
dag {
	enabled = true
	overwrite = true
	file = 'workflow-visualization.png'
}


// WHETHER TO REMOVE TEMPORARY FILES AFTER A SUCCESSFUL RUN
cleanup = false


// PROFILE OPTIONS
profiles {
	
	standard {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false
		
		process {
			
			withName:PROCESS_NAME {
				container = ""
			}
		}
		
	}
	
	docker {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false
		
		process {
			
			withName:PROCESS_NAME {
				container = ""
			}
		}
		
	}
	
	singularity {
		
		singularity.enabled = true
		docker.enabled = false
		conda.enabled = false
		
		process {
			
			withName:PROCESS_NAME {
				container = ""
			}
		}
		
	}
	
	conda {
		
		conda {
			enabled = true
			// cacheDir = "$baseDir/config/envs"
			// createOptions = "-y -c conda-forge -c bioconda -c r"
			useMamba = true
		}
		
		singularity.enabled = false
		docker.enabled = false
		
		process {
			
			withName:PROCESS_NAME {
				conda = ""
			}
		}
		
	}
}


// MANIFEST
manifest {
	homePage = ''
	mainScript = 'main.nf'
	defaultBranch = 'main'
	description = ''
	author = ''
}